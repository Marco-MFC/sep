# GitHub action for building the distribution and wheels of the sep package
# and uploading them to the PyPI package index.

name: build-wheels-upload-pypi

on: [push]
  # push:
  #   # Run this action on the trigger event when *any* tag is pushed
  #   tags:
  #      - '*'

jobs:

  # This action is split into three jobs:
  # - Building the source distribution
  # - Building the wheels for the distribution
  # - Uploading the artifacts to PyPI package
  # The first and second job run in parallel.
  # The uploading jos needs to have the other two finished without error.

  build_sdist:

    # First the source distribution is done on ubuntu. This is not related
    # to any operating system, so we could do it on the default os.

    runs-on: ubuntu-latest

    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: install_python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      # For the build, sep needs numpy and cython and we add twine and wheel
      # for better testing and checking.

      - name: Install dependencies
        run: python -m pip install setuptools twine numpy wheel cython build

      - name: Build sdist
        run: python -m build --sdist

      - name: Show files
        run: ls -lh dist
        shell: bash

      - name: Check metadata
        run: twine check dist/*

      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/*.tar.gz

  build_wheels:

    # Second the wheels are build for different OS and python versions. This is
    # done with the help of the `cibuildwheel` package.
    #
    # The wheels are built for Windows, Linux and MacOS and the python versions
    # 3.9 - 3.12.
    #
    # The three operating system could be done in parallel.
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]
        os: [windows-latest, macos-latest, ubuntu-latest]
        include:
          - os: ubuntu-20.04
            cibw_archs: "aarch64"

    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.16.5
        env:
          # configure cibuildwheel to build native archs ('auto'), and some
          # emulated ones
          CIBW_ARCHS_LINUX: auto aarch64 ppc64le s390x

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl

  # upload_to_pypi:

  #   # Finally we collect all out data from the artifacts and put them back to
  #   # dist directory for upload. The final step waits for the other jobs to be
  #   # finished and starts only if the trigger event of the action was a push
  #   # of a tag starting with <v> as version separation. All other jobs run
  #   # without heading <v>

  #   runs-on: [ubuntu-latest]
  #   needs: [build_wheels, build_sdist]

  #   # upload to PyPI on every tag starting with 'v'
  #   if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')

  #   steps:
  #   - uses: actions/setup-python@v2

  #   - uses: actions/download-artifact@v2
  #     with:
  #       name: dist
  #       path: dist

  #   - name: upload_to_pypi
  #     uses: pypa/gh-action-pypi-publish@v1.4.1
  #     with:
  #       user: __token__
  #       password: ${{ secrets.PYPI_TOKEN }}
  #       skip_existing: true
